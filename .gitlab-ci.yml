stages:
  - lints
  - tests
  - build
  - beta

variables:
  FLUTTER_VERSION: "3.13.9"
  FASTLANE_LANE: "beta"
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"


analyze:
  stage: lints
  image: "ghcr.io/cirruslabs/flutter:$FLUTTER_VERSION"
  script:
    - flutter analyze
  allow_failure: true

unit test:
  image: "ghcr.io/cirruslabs/flutter:$FLUTTER_VERSION"
  stage: tests
  script:
    - echo "test mock"
    - flutter test --coverage test/unit_test # Run unit test 
    - lcov -r coverage/lcov.info '*/__test*__/*' -o coverage/lcov_cleaned.info
    - genhtml coverage/lcov_cleaned.info --output=coverage
  # tags:
  #   - flutter
  artifacts:
    paths:
      - coverage

android:
  stage: build
  image: "ghcr.io/cirruslabs/flutter:$FLUTTER_VERSION"
  script:
    - flutter build apk --flavor production --target lib/main.dart --release  --target-platform android-arm,android-arm64
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-production-release.apk 

ios:
  stage: build
  # image: "ghcr.io/cirruslabs/flutter:$FLUTTER_VERSION"
  script:
    # - flutter build ios --release
    - echo "Mock Build IPA"
  # artifacts:
  #   paths:
  #     - build/ios/iphoneos/Runner.app # Adjust the path to the .ipa file
  #     - build/ios/ipa_archive/*.ipa  # Include the .ipa file if generated by Flutter
  #   expire_in: 1 week  # Adjust the expiration time as needed


# test_flight_build:
#   dependencies: []
#   stage: test_flight
#   artifacts:
#     paths:
#       - fastlane/screenshots
#       - fastlane/logs
#   script:
#     - fastlane beta
#   only:
#      - master

beta:
  dependencies: [android]
  stage: beta
  before_script:
    - cd android
    - gem install bundler
    - bundle install
  script:
    - fastlane beta
    - fastlane buildNumber
  
  # only:
  #   - tags
  #   - master
  # except:
  #   - branches
